/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package mx.itson.equipo_2.views;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.function.Consumer;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.border.LineBorder;
import mx.itson.equipo_2.models.entitys.Celda;
import mx.itson.equipo_2.models.entitys.Coordenada;
import mx.itson.equipo_2.models.entitys.Tablero;
import mx.itson.equipo_2.models.enums.ResultadoDisparo;
import static mx.itson.equipo_2.models.enums.ResultadoDisparo.AGUA;
import mx.itson.equipo_2.patterns.factory.ViewFactory;
import mx.itson.equipo_2.patterns.mediator.ViewMediator;

/**
 *
 * @author 
 * Ariel Eduardo Borbon Izaguirre   00000252116
* Sebastián Bórquez Huerta          00000252115
* Alberto Jiménez García            00000252595
* José Eduardo Aguilar García       00000252049
* José Luis Islas Molina            00000252574
 */

public class DispararView extends javax.swing.JPanel implements ViewFactory {

    private JButton[][] botonesPropio = new JButton[10][10];
    private JButton[][] botonesEnemigo = new JButton[10][10];

    private Consumer<Coordenada> listenerDisparo;

    /**
     * Creates new form DispararView
     */
    public DispararView() {
        initComponents();
        crearCeldas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelTableroEnemigo = new JPanel();
        btnRendirse = new JButton();
        btnDisparar = new JButton();
        panelTableroPropio = new JPanel();
        lblTimer = new JLabel();

        setBackground(new Color(83, 111, 137));
        setPreferredSize(new Dimension(1280, 720));
        setLayout(null);

        panelTableroEnemigo.setBackground(new Color(82, 113, 177));
        panelTableroEnemigo.setMaximumSize(new Dimension(600, 600));
        panelTableroEnemigo.setMinimumSize(new Dimension(600, 600));
        panelTableroEnemigo.setLayout(new GridLayout(10, 10));
        add(panelTableroEnemigo);
        panelTableroEnemigo.setBounds(615, 56, 600, 600);

        btnRendirse.setBackground(new Color(75, 75, 75));
        btnRendirse.setFont(new Font("Segoe UI Black", 0, 18)); // NOI18N
        btnRendirse.setForeground(new Color(255, 255, 255));
        btnRendirse.setText("RENDIRSE");
        btnRendirse.setBorder(null);
        btnRendirse.setFocusPainted(false);
        btnRendirse.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                btnRendirseActionPerformed(evt);
            }
        });
        add(btnRendirse);
        btnRendirse.setBounds(60, 650, 156, 41);

        btnDisparar.setBackground(new Color(75, 75, 75));
        btnDisparar.setFont(new Font("Segoe UI Black", 0, 18)); // NOI18N
        btnDisparar.setForeground(new Color(255, 255, 255));
        btnDisparar.setText("DISPARAR");
        btnDisparar.setBorder(null);
        btnDisparar.setFocusPainted(false);
        btnDisparar.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                btnDispararActionPerformed(evt);
            }
        });
        add(btnDisparar);
        btnDisparar.setBounds(260, 650, 156, 41);

        panelTableroPropio.setBackground(new Color(82, 113, 177));
        panelTableroPropio.setMaximumSize(new Dimension(250, 250));
        panelTableroPropio.setMinimumSize(new Dimension(250, 250));
        panelTableroPropio.setLayout(new GridLayout(10, 10));
        add(panelTableroPropio);
        panelTableroPropio.setBounds(130, 50, 250, 250);

        lblTimer.setFont(new Font("Segoe UI", 0, 24)); // NOI18N
        lblTimer.setText("jLabel1");
        add(lblTimer);
        lblTimer.setBounds(100, 320, 360, 50);
    }// </editor-fold>//GEN-END:initComponents

    private void btnRendirseActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btnRendirseActionPerformed
        int opcion = JOptionPane.showConfirmDialog(this, "¿Estás seguro que deseas rendirte?", "Confirmación", JOptionPane.YES_NO_OPTION);

        if (opcion == JOptionPane.YES_OPTION) {
            System.out.println("El jugador se rindió");
        }
    }//GEN-LAST:event_btnRendirseActionPerformed

    private void btnDispararActionPerformed(ActionEvent evt) {//GEN-FIRST:event_btnDispararActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnDispararActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JButton btnDisparar;
    private JButton btnRendirse;
    private JLabel lblTimer;
    private JPanel panelTableroEnemigo;
    private JPanel panelTableroPropio;
    // End of variables declaration//GEN-END:variables

    private void crearCeldas() {
        botonesEnemigo = new JButton[10][10];
        botonesPropio = new JButton[10][10];

        for (int fila = 0; fila < 10; fila++) {
            for (int col = 0; col < 10; col++) {
                // === CELDAS ENEMIGO ===
                JButton celdaEnemigo = new JButton();
                celdaEnemigo.setBackground(new Color(50, 70, 100));
                celdaEnemigo.setBorder(new LineBorder(Color.BLACK, 1));

                final int f = fila;
                final int c = col;
                celdaEnemigo.addActionListener(e -> dispararEn(f, c));

                panelTableroEnemigo.add(celdaEnemigo);
                botonesEnemigo[fila][col] = celdaEnemigo;

                // === CELDAS PROPIO ===
                JButton celdaPropio = new JButton();
                celdaPropio.setEnabled(false);
                celdaPropio.setBackground(new Color(50, 70, 100));
                celdaPropio.setBorder(new LineBorder(Color.BLACK, 1));

                panelTableroPropio.add(celdaPropio);
                botonesPropio[fila][col] = celdaPropio;
            }
        }
    }

    private void dispararEn(int fila, int col) {
        if (listenerDisparo != null) {
            listenerDisparo.accept(new Coordenada(fila, col));
            System.out.println("Disparo en: (" + fila + "," + col + ")");
        }
    }

    public void setListenerDisparo(Consumer<Coordenada> listener) {
        this.listenerDisparo = listener;
    }

    public void actualizarCeldaEnemigo(int fila, int col, ResultadoDisparo resultado) {
        JButton boton = botonesEnemigo[fila][col];
        switch (resultado) {
            case AGUA ->
                boton.setBackground(Color.BLUE);
            case IMPACTO_SIN_HUNDIMIENTO ->
                boton.setBackground(Color.ORANGE);
            case IMPACTO_CON_HUNDIMIENTO ->
                boton.setBackground(Color.RED);
        }
    }

    public void actualizarCeldaPropia(int fila, int col, ResultadoDisparo resultado) {
        JButton boton = botonesPropio[fila][col];
        switch (resultado) {
            case AGUA ->
                boton.setBackground(Color.CYAN);
            case IMPACTO_SIN_HUNDIMIENTO ->
                boton.setBackground(Color.MAGENTA);
            case IMPACTO_CON_HUNDIMIENTO ->
                boton.setBackground(Color.BLACK);
        }
    }

    @Override
    public JPanel crear(ViewMediator control) {
        return this;
    }
    
    

    /**
     * Muestra el estado inicial del tablero del jugador, pintando las celdas
     * donde se encuentran sus naves.
     *
     * @param tablero El tablero del jugador.
     */
    public void mostrarTableroPropio(Tablero tablero) {
        for (int fila = 0; fila < Tablero.TAMANIO; fila++) {
            for (int col = 0; col < Tablero.TAMANIO; col++) {
                Celda celda = tablero.getCelda(fila, col);
                if (celda.getNave() != null) {
                    // Pinta las celdas con naves de un color distintivo (ej. GRIS)
                    botonesPropio[fila][col].setBackground(Color.DARK_GRAY);
                }
            }
        }

    }
    
    public void actualizarTimer(int segundosRestantes, String jugador) {
        lblTimer.setText("Turno de " + jugador + " - Tiempo: " + segundosRestantes + "s");
    }
    

}
